import TelegramBot from "node-telegram-bot-api";
import { botToken, chatID, groupChatID } from "../config";
import fs from "fs";
import path from "path";
import { keywordReplies } from "../constants/keyword";

// Kh·ªüi t·∫°o bot v√† x·ª≠ l√Ω l·ªói n·∫øu token kh√¥ng h·ª£p l·ªá
let bot: TelegramBot | null = null;

interface SendGroupMessageOptions {
  message: string;
  imagePath?: string; // ƒë∆∞·ªùng d·∫´n local
  imageUrl?: string; // ho·∫∑c ·∫£nh t·ª´ internet
}

// Danh s√°ch t·ª´ kh√≥a & ph·∫£n h·ªìi


export function getReply(text: string): string | null {
  const lowered = text.toLowerCase();

  for (const item of keywordReplies) {
    for (const keyword of item.keywords) {
      if (lowered.includes(keyword.toLowerCase())) {
        return item.reply;
      }
    }
  }

  return null;
}


// H√†m escape k√Ω t·ª± ƒë·∫∑c bi·ªát trong regex t·ª´ chu·ªói keyword
function escapeRegExp(string: string): string {
  return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}

try {
  if (!botToken) {
    throw new Error(
      "TELEGRAM_BOT_TOKEN is not defined in environment variables"
    );
  }

  bot = new TelegramBot(botToken, { polling: true });
} catch (error) {
  console.error("Failed to initialize Telegram Bot:", error);
}

export function sendMessageToMe(message: string) {
  if (bot) {
    return bot.sendMessage(chatID, message);
  } else {
    console.error("Telegram bot is not initialized.");
  }
}

export async function sendMessageToGroup({
  message,
  imagePath,
  imageUrl,
}: SendGroupMessageOptions): Promise<void> {
  if (!bot) {
    console.error("Telegram bot is not initialized.");
    return;
  }

  try {
    // G·ª≠i ·∫£nh t·ª´ local n·∫øu c√≥ v√† t·ªìn t·∫°i
    if (imagePath && fs.existsSync(imagePath)) {
      const stream = fs.createReadStream(imagePath);
      await bot.sendPhoto(groupChatID, stream, {
        caption: message,
        parse_mode: "Markdown",
      });
      return;
    }

    // G·ª≠i ·∫£nh t·ª´ URL n·∫øu c√≥
    if (imageUrl) {
      await bot.sendPhoto(groupChatID, imageUrl, {
        caption: message,
        parse_mode: "Markdown",
      });
      return;
    }

    // N·∫øu kh√¥ng c√≥ ·∫£nh th√¨ g·ª≠i tin nh·∫Øn th∆∞·ªùng
    await bot.sendMessage(groupChatID, message, {
      parse_mode: "Markdown",
    });
  } catch (error) {
    console.error("‚ùå Failed to send message to group:", error);
  }
}

export function registerMessageHandler() {
  if (bot) {
    bot.on("message", async (msg) => {
      const text = msg.text || "";

      const reply = getReply(text);

      if (reply) {
        // G·ª≠i ph·∫£n h·ªìi v√†o groupChatID (nh√≥m)
        await sendMessageToGroup({ message: reply });
      } else {
        console.log(`ü§ñ Kh√¥ng t√¨m th·∫•y keyword trong: "${text}"`);
      }
    });
  } else {
    console.error("Telegram bot is not initialized.");
  }

  console.log("‚úÖ Message handler registered");
}

export default bot;
